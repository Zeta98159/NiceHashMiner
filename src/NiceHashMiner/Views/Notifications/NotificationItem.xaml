<UserControl x:Class="NiceHashMiner.Views.Notifications.NotificationItem"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NiceHashMiner.Views.Notifications"
             xmlns:localConv="clr-namespace:NiceHashMiner.Views.Notifications.Converters"
             xmlns:nhmMining="clr-namespace:NHMCore.Notifications;assembly=NHMCore"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance Type=nhmMining:Notification}">
    <UserControl.Resources>
        <localConv:NewVisibilityConverter x:Key="NewVisibilityConv" />
        <localConv:CheckVisibilityConverter x:Key="CheckVisibilityConv" />
        <Style TargetType="TextBlock" x:Key="local.InfoIcon">
            <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Margin" Value="5,0,0,0"/>
            <Setter Property="Foreground" Value="{DynamicResource Gray2ColorBrush}"/>
            <Setter Property="FontStyle" Value="Normal"/>
            <Setter Property="FontStretch" Value="Normal"/>
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="LineHeight" Value="1"/>
            <Setter Property="Opacity" Value="0.75"/>
            <Setter Property="Text" Value="&#xF05A;"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="local.DefaultTextBlock" >
            <Setter Property="FontFamily" Value="{StaticResource Ubuntu-Regular}" />
            <Setter Property="Foreground" Value="{DynamicResource TextColorBrush}" />
            <Setter Property="FontWeight" Value="500" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="TextBlock.LineHeight" Value="18" />
        </Style>
        <Style TargetType="{x:Type ToggleButton}" x:Key="local.TextBlockToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border
                            x:Name="Chrome"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Margin="0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="FontFamily" Value="{StaticResource Ubuntu-Regular}"/>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsVisible}" Value="True">
                    <Setter Property="IsChecked" Value="True"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsVisible}" Value="False">
                    <Setter Property="IsChecked" Value="False"></Setter>
                </DataTrigger>
            </Style.Triggers>
            <Style.Resources>
                <Style TargetType="{x:Type TextBlock}">
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="FontFamily" Value="{StaticResource Ubuntu-Regular}"/>
                    <Setter Property="FontSize" Value="14" />
                    <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
                    <Setter Property="LineHeight" Value="1.5" />
                    <Setter Property="TextAlignment" Value="Right" />
                </Style>
            </Style.Resources>
        </Style>
    </UserControl.Resources>
    <Border BorderBrush="{DynamicResource BorderColor}" BorderThickness="2" Margin="0" Padding="0">
        <Grid Margin="16,0,16,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" MinHeight="64" Height="Auto">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <WrapPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,0,0">
                    <TextBlock x:Name="itemErrorTitle" Text="{Binding Name}" Style="{StaticResource local.DefaultTextBlock}" FontSize="14" VerticalAlignment="Center"/>
                    <Border Width="41" Height="24" Margin="15,0,0,0" Background="{StaticResource Brushes.Light.Basic.NoticeColor}" Visibility="{Binding NotificationNew, Converter={StaticResource NewVisibilityConv}}" CornerRadius="2">
                        <TextBlock Text="NEW" Style="{StaticResource FontsTypography.Button-White-Small}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </WrapPanel>
                <WrapPanel Grid.Column="1" Background="Transparent" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Right">
                    <ToggleButton x:Name="InfoToggleButton"
                              Style="{StaticResource local.TextBlockToggleButton}"
                              Margin="0,0,16,0"
                              Click="InfoToggleButton_Click"
                              HorizontalAlignment="Left"
                              VerticalAlignment="Center">
                        <TextBlock x:Name="InfoToggleButtonText"
                                   TextWrapping="Wrap"
                                   TextAlignment="Left">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Text" Value="More Info"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsVisible}" Value="True">
                                            <Setter Property="Text" Value="Less Info"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsVisible}" Value="False">
                                            <Setter Property="Text" Value="More Info"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </ToggleButton>
                    <Button Style="{StaticResource BigButtonWhiteNotifications}"
                        MinWidth="88"
                        Width="Auto" Height="24"
                        FontSize="10"
                        Padding="20,0,22,0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        x:Name="RemoveButton" Click="RemoveNotification" Content="Clear" />
                    <Button Style="{StaticResource BigButtonPrimaryNotifications}"
                        MinWidth="88"
                        Width="Auto" Height="24"
                        FontSize="10"
                        Padding="24,0,24,0"
                        HorizontalAlignment="Left"
                        x:Name="ActionButton" Click="ExecuteNotificationAction" Visibility="Collapsed" Margin="16,0,0,0" />
                </WrapPanel>
            </Grid>
            <Grid Grid.Row="1" Width="Auto" x:Name="ActionProgress" Visibility="Collapsed" Margin="5,0,5,0" VerticalAlignment="Bottom">
                <ProgressBar Width="Auto" Style="{StaticResource progressStyle}" Height="15" x:Name="ActionProgressBar" />
                <TextBlock Width="Auto" HorizontalAlignment="Center" Text="" />
            </Grid>
            <Grid x:Name="notificationsDetailsGrid" Grid.Row="2" Margin="0,0,0,16">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsVisible}" Value="True">
                                <Setter Property="Visibility" Value="Visible"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsVisible}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <WrapPanel Orientation="Vertical" Height="auto">
                    <WrapPanel Margin="0,8,0,0" Visibility="{Binding NotificationUrl, Converter={StaticResource StringToVisibilityConverter}}">
                        <TextBlock x:Name="textBlockUrl">
                            <Hyperlink x:Name="notificationHyperLink" RequestNavigate="notificationHyperLink_RequestNavigate"  NavigateUri="{Binding NotificationUrl}" TextDecorations="{x:Null}">
                                <TextBlock Text="{Binding NotificationUrl}"></TextBlock>
                            </Hyperlink>
                        </TextBlock>
                    </WrapPanel>
                    <StackPanel Margin="0,10,0,0" Orientation="Horizontal" Visibility="{Binding NotificationUUID, Converter={StaticResource CheckVisibilityConv}}">
                        <CheckBox x:Name="DontShowAgainCheckBox" Content="Do not show this type of notification again" Style="{StaticResource CheckBoxNormal}" />
                        <TextBlock VerticalAlignment="Center" Style="{StaticResource local.InfoIcon}" ToolTip="Upon removal, notifications of this type will not be visible anymore. If you wish to undo this action later, you will need to manually remove this notification from the General.json file" />
                    </StackPanel>
                </WrapPanel>
            </Grid>
            <StackPanel Grid.Row="3" x:Name="NotificationHistoryGrid" Visibility="{Binding IsVisible, Converter={StaticResource NulBoolToVisibilityConverter}}">
                <Separator Margin="0,0,0,10" Background="{DynamicResource BorderColor}"/>
                <Grid Margin="0,5,0,5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock VerticalAlignment="Center" Style="{StaticResource BaseUbuntuTextBlock}" Foreground="{DynamicResource TextColorBrush}" Grid.Column="0" Text="{Binding NotificationTime}" />
                    <TextBlock VerticalAlignment="Center" Style="{StaticResource BaseUbuntuTextBlock}" Foreground="{DynamicResource TextColorBrush}" Grid.Column="1" Margin="20,0,0,0" Text="{Binding NotificationContent}" TextWrapping="WrapWithOverflow"/>
                    <Button VerticalAlignment="Center" Foreground="{DynamicResource TextColorBrush}" Grid.Column="2" Margin="40,0,0,0" Style="{StaticResource ButtonNoBorder}" Content="X" Click="RemoveThisNotification_click" />
                </Grid>
                <ItemsControl x:Name="ic_notificationHistory" ItemsSource="{Binding SubNotificationList}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <local:NotificationHistoryItem DataContext="{Binding .}" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </Grid>
    </Border>
</UserControl>
